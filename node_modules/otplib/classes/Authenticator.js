'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _secretKey = require('../utils/secretKey');

var _secretKey2 = _interopRequireDefault(_secretKey);

var _check2 = require('../impl/authenticator/check');

var _check3 = _interopRequireDefault(_check2);

var _decodeKey = require('../impl/authenticator/decodeKey');

var _decodeKey2 = _interopRequireDefault(_decodeKey);

var _encodeKey = require('../impl/authenticator/encodeKey');

var _encodeKey2 = _interopRequireDefault(_encodeKey);

var _keyuri2 = require('../impl/authenticator/keyuri');

var _keyuri3 = _interopRequireDefault(_keyuri2);

var _token = require('../impl/authenticator/token');

var _token2 = _interopRequireDefault(_token);

var _TOTP2 = require('./TOTP');

var _TOTP3 = _interopRequireDefault(_TOTP2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Google Authenticator adapter
 *
 * ## References
 * -   http://en.wikipedia.org/wiki/Google_Authenticator
 *
 * ## Algorithm
 *
 * ```
 * secret := base32decode(secret)
 * message := floor(current Unix time / 30)
 * hash := HMAC-SHA1(secret, message)
 * offset := last nibble of hash
 * truncatedHash := hash[offset..offset+3]  //4 bytes starting at the offset
 * set the first bit of truncatedHash to zero  //remove the most significant bit
 * code := truncatedHash mod 1000000
 * pad code with 0 until length of code is 6
 *
 * return code
 * ```
 *
 * @class Authenticator
 * @extends {TOTP}
 * @since 3.0.0
 * @author Gerald Yeo
 * @license MIT
 */
var Authenticator = function (_TOTP) {
  _inherits(Authenticator, _TOTP);

  function Authenticator() {
    _classCallCheck(this, Authenticator);

    var _this = _possibleConstructorReturn(this, (Authenticator.__proto__ || Object.getPrototypeOf(Authenticator)).call(this));

    _this.options = {
      epoch: null
    };
    return _this;
  }

  /**
   * @see {@link module:impl/authenticator/encodeKey}
   */


  _createClass(Authenticator, [{
    key: 'encode',
    value: function encode() {
      return _encodeKey2.default.apply(undefined, arguments);
    }

    /**
     * @see {@link module:impl/authenticator/decodeKey}
     */

  }, {
    key: 'decode',
    value: function decode() {
      return _decodeKey2.default.apply(undefined, arguments);
    }

    /**
     * @see {@link module:impl/authenticator/keyuri}
     */

  }, {
    key: 'keyuri',
    value: function keyuri() {
      return _keyuri3.default.apply(undefined, arguments);
    }

    /**
     * Generates and encodes a secret key
     *
     * @param {string} length - secret key length (not encoded key length)
     * @return {string}
     * @see {@link module:impl/authenticator/secretKey}
     * @see {@link module:impl/authenticator/encodeKey}
     */

  }, {
    key: 'generateSecret',
    value: function generateSecret() {
      var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;

      if (len == null) {
        return '';
      }
      var secret = (0, _secretKey2.default)(len);
      return (0, _encodeKey2.default)(secret);
    }

    /**
     * @param {string} secret
     * @return {string}
     * @see {@link module:impl/authenticator/token}
     */

  }, {
    key: 'generate',
    value: function generate(secret) {
      return (0, _token2.default)(secret, this.options);
    }

    /**
     * Checks validity of token.
     * Passes instance options to underlying core function
     *
     * @param {string} token
     * @param {string} secret
     * @return {boolean}
     * @see {@link module:impl/authenticator/check}
     */

  }, {
    key: 'check',
    value: function check(token, secret) {
      return (0, _check3.default)(token, secret, this.options);
    }
  }]);

  return Authenticator;
}(_TOTP3.default);

exports.default = Authenticator;